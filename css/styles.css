/* ====== VARIABLES ====== */
:root {
    /* Colors */
    --primary-color: #C51F5D;
    --background-color: #000000;  /*was #191919*/
    --text-color: #ffffff;
    --overlay-color: rgba(0, 0, 0, 0.5);
    --overlay-dark: rgba(0, 0, 0, 0.7);
    --overlay-darker: rgba(0, 0, 0, 0.8);
    --overlay-darkest: rgba(0, 0, 0, 0.95);

    /* Typography */
    --font-primary: 'Josefin Sans', Arial, sans-serif;
/*    --font-fallback: 'Hanken Grotesk', Arial, sans-serif; */
    --font-size-small: 12px;
    --font-size-normal: 20px;
    --font-size-medium: 24px;
    --font-size-large: 36px;
    --font-size-xlarge: 42px;
    --font-size-xxlarge: 54px;

    /* Transitions */
    --transition-fast: 0.3s;
    --transition-medium: 0.5s;
    --transition-slow: 1.0s;
    --transition-background: 1500ms;

    /* Spacing */
    --spacing-xs: 5px;
    --spacing-sm: 10px;
    --spacing-md: 20px;
    --spacing-lg: 30px;
    --spacing-xl: 40px;

    /* Borders */
    --border-radius-sm: 3px;
    --border-radius-md: 5px;
    --border-radius-lg: 10px;
    --border-radius-circle: 50%;

    /* Z-indexes */
    --z-background: -1;
    --z-content: 10;
    --z-controls: 100;
    --z-popup: 1000;
    --z-menu-button: 999;
    --z-menu: 2000;
    --z-transition: 9999;
}

/* ====== GLOBAL STYLES ====== */
/*  body {
    margin: 0;
    height: 100vh;
    perspective: 1800px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--background-color);
    color: var(--text-color);
    overflow: hidden;
    font-family: var(--font-primary);
    position: relative;
}   */

/* Option 3: More subtle gradient with better blending */
body {
    margin: 0;
    height: 100vh;
    perspective: 1800px;
    display: flex;
    justify-content: center;
    align-items: center;
    /* Subtle radial gradient */
    background: radial-gradient(circle at 85% 85%, rgba(139, 92, 246, 0.15) 0%, rgba(124, 58, 237, 0.08) 20%, rgba(107, 33, 168, 0.04) 40%, rgba(0, 0, 0, 1) 60%);
    background-color: #000000; /* Fallback */
    color: var(--text-color);
    overflow: hidden;
    font-family: var(--font-primary);
    position: relative;
}


body.page-transition {
    opacity: 0;
    background-color: #000;
}

/* ====== SCENE & CUBE ====== */
.scene {
    width: 50vw;
    height: 50vw;
    max-height: 90vh;
    max-width: 90vh;
    perspective: 1800px;
    margin: 0 auto;
}

.cube {
    width: 100%;
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    transition: transform var(--transition-medium); /*deleted to remove flickering on rotation*/
    transform-origin: center center;
    scale: 0.6;
}

.cube.auto-rotating {
    transition: none !important;
}

.cube-face {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.2);
    cursor: none !important;
    backface-visibility: visible;
    transition: transform 0.8s cubic-bezier(0.215, 0.61, 0.355, 1);
    /* Alternative options with very minimal bounce: */
    /* transition: transform 0.8s ease-out;   /* Smooth transition no bounce */
    /* transition: transform 0.8s cubic-bezier(0.215, 0.61, 0.355, 1); */
    /* transition: transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94); */
    /* transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275); */
}

.cube-face img, 
.cube-face video {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.face-text {
    position: absolute;
    bottom: 5%;
    left: 5%;
    right: 5%;
    text-align: left;
    color: transparent;
    padding: 0;
    font-size: 5vmin;
    font-weight: bold;
    z-index: var(--z-content);
    text-shadow: 
        -0.1vmin -0.1vmin 0 #fff,
        0.1vmin -0.1vmin 0 #fff,
        -0.1vmin 0.1vmin 0 #fff,
        0.1vmin 0.1vmin 0 #fff,
        /* Add drop shadow (new) */
        0 0.4vmin 0.5vmin rgba(0, 0, 0, 0.9); /* No horizontal offset (0). A slight vertical offset (0.2vmin). A blur radius (0.5vmin). Black shadow with 80% opacity */
    line-height: 1.1;
    width: 90%;
    font-family: var(--font-primary);
    text-transform: uppercase;
}

/* Cube Face Positions */
.cube-face.front {
    transform: translateZ(calc(25vw));
}

.cube-face.back {
    transform: rotateY(180deg) translateZ(calc(25vw));
}

.cube-face.right {
    transform: rotateY(90deg) translateZ(calc(25vw));
}

.cube-face.left {
    transform: rotateY(-90deg) translateZ(calc(25vw));
}

.cube-face.top {
    transform: rotateX(90deg) translateZ(calc(25vw));
}

.cube-face.bottom {
    transform: rotateX(-90deg) translateZ(calc(25vw));
}

/* ====== INNER CUBE ====== */
.inner-cube {
    position: absolute;
    width: 30%;
    height: 30%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--primary-color);
    border-radius: var(--border-radius-sm);
    z-index: 50;
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    color: var(--text-color);
    font-weight: bold;
    cursor: pointer;
    transition: all var(--transition-medium);
    /* Glow effect */
    box-shadow: 0 0 15px var(--primary-color),
                0 0 30px var(--primary-color),
                0 0 45px rgba(197, 31, 93, 0.3);
    text-align: center;
    overflow: hidden;
}

.inner-cube:hover {
    transform: translate(-50%, -50%) scale(1.1);
    box-shadow: 0 0 20px var(--primary-color),
                0 0 40px var(--primary-color),
                0 0 60px rgba(197, 31, 93, 0.6);
}

.inner-cube-content {
    padding: 10px;
    font-family: var(--font-primary);
    font-size: 1.2rem;
    text-transform: uppercase;
    letter-spacing: 2px;
}

/* Animation for the glow effect */
@keyframes pulse-glow {
    0% {
        box-shadow: 0 0 15px var(--primary-color),
                    0 0 30px var(--primary-color),
                    0 0 45px rgba(197, 31, 93, 0.3);
    }
    50% {
        box-shadow: 0 0 20px var(--primary-color),
                    0 0 40px var(--primary-color),
                    0 0 60px rgba(197, 31, 93, 0.6);
    }
    100% {
        box-shadow: 0 0 15px var(--primary-color),
                    0 0 30px var(--primary-color),
                    0 0 45px rgba(197, 31, 93, 0.3);
    }
}

.inner-cube {
    animation: pulse-glow 3s infinite ease-in-out;
}

.inner-cube-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    display: block;
}

/* If you want the image to completely fill the cube */
.inner-cube-image.fill {
    object-fit: cover;
    width: 100%;
    height: 100%;
}

/* Unboxed cube state */
.cube.unboxed .cube-face.front {
    transform: translateZ(calc(60vw)); /* Increased from 40vw */
}

.cube.unboxed .cube-face.back {
    transform: rotateY(180deg) translateZ(calc(60vw)); /* Increased from 40vw */
}

.cube.unboxed .cube-face.right {
    transform: rotateY(90deg) translateZ(calc(60vw)); /* Increased from 40vw */
}

.cube.unboxed .cube-face.left {
    transform: rotateY(-90deg) translateZ(calc(60vw)); /* Increased from 40vw */
}

.cube.unboxed .cube-face.top {
    transform: rotateX(90deg) translateZ(calc(60vw)); /* Increased from 40vw */
}

.cube.unboxed .cube-face.bottom {
    transform: rotateX(-90deg) translateZ(calc(60vw)); /* Increased from 40vw */
}

.unbox-btn i {
    font-size: 18px;
}

/* Inner cube becomes more visible in unboxed state */
.cube.unboxed .inner-cube {
    transform: translate(-50%, -50%) scale(1.2);
    box-shadow: 0 0 25px var(--primary-color),
                0 0 50px var(--primary-color),
                0 0 75px rgba(197, 31, 93, 0.5);
}


/* ====== BACKGROUND TRANSITIONS ====== */
#bg-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: var(--z-background);
    pointer-events: none;
}

#bg-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    opacity: 0;
    transition: opacity var(--transition-background) ease;
}

/* Page transition overlay */
.page-transition {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    z-index: var(--z-transition);
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--transition-slow) ease;
    pointer-events: none;
}

.page-transition.active {
    opacity: 1;
    visibility: visible;
}

/* ====== CONTROLS ====== */
.controls {
    position: fixed;
    bottom: var(--spacing-md);
    left: var(--spacing-md);
    display: grid;
    grid-template-columns: 50px 10px 50px 10px 50px;
    grid-template-rows: 50px 10px 50px 10px 50px 10px 50px 10px 50px 10px 50px;
    gap: 0;
    z-index: var(--z-controls);
}

.control-btn, 
.zoom-btn, 
.help-btn {
    width: 100%;
    height: 100%;
    background-color: var(--overlay-color);
    color: var(--text-color);
    border: none;
    border-radius: var(--border-radius-md);
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--font-size-normal);
    transition: background-color var(--transition-fast), box-shadow var(--transition-fast);
    box-shadow: 0 0 8px 1px rgba(255, 255, 255, 0.3), 
                0 2px 10px rgba(0, 0, 0, 0.3);
}

.control-btn:hover,
.zoom-btn:hover,
.help-btn:hover {
   /* background-color: var(--overlay-darker);*/
    background-color: rgba(0, 0, 0, 0.9);
    box-shadow: 0 0 12px 2px rgba(255, 255, 255, 0.4), 
                0 2px 15px rgba(0, 0, 0, 0.4);
}

.zoom-btn {
    font-size: var(--font-size-medium);
    font-weight: bold;
}

.reset-btn {
    font-size: var(--font-size-small);
    font-weight: bold;
}

.help-btn {
    position: relative;
}

.help-btn i {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
}

/* ====== INSTRUCTIONS POPUP ====== */
.instructions-popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--overlay-darker);
    color: var(--text-color);
    padding: var(--spacing-md);
    border-radius: var(--border-radius-lg);
    z-index: var(--z-popup);
    max-width: 80%;
    display: none;
}

.instructions-popup.active {
    display: block;
}

.instructions-popup h3 {
    font-family: var(--font-primary);
    font-weight: 600;
    margin-top: 0;
}

.instructions-popup p {
    font-family: var(--font-primary);
    font-weight: 400;
}

.close-popup {
    position: absolute;
    top: var(--spacing-xs);
    right: var(--spacing-xs);
    background: none;
    border: none;
    color: var(--text-color);
    font-size: var(--font-size-normal);
    cursor: pointer;
}

/* ====== MENU BUTTON & POPUP ====== */
.menu-btn {
    position: fixed;
    top: var(--spacing-md);
    right: var(--spacing-md);
    width: 50px;
    height: 50px;
    background-color: var(--overlay-dark);
    border-radius: var(--border-radius-sm);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    z-index: var(--z-menu-button);
    box-shadow: 0 0 8px 1px rgba(255, 255, 255, 0.3), 
                0 2px 10px rgba(0, 0, 0, 0.3);
    transition: background-color var(--transition-fast), box-shadow var(--transition-fast);
}

.menu-btn:hover {
    background-color: rgba(0, 0, 0, 0.9);
    box-shadow: 0 0 12px 2px rgba(255, 255, 255, 0.4), 
                0 2px 15px rgba(0, 0, 0, 0.4);
}

.menu-btn i {
    color: var(--text-color);
    font-size: var(--font-size-medium);
}

.popup-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--overlay-darkest);
    z-index: var(--z-menu);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
    opacity: 0;
    visibility: hidden;
    transition: opacity var(--transition-fast) ease, visibility var(--transition-fast) ease;
    overflow: hidden;
}

.popup-menu.active {
    opacity: 1;
    visibility: visible;
}

.menu-close {
    position: absolute;
    top: var(--spacing-md);
    right: var(--spacing-md);
    width: 50px;
    height: 50px;
    background-color: var(--overlay-color);
    border-radius: var(--border-radius-sm);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    color: var(--text-color);
    font-size: var(--font-size-medium);
    border: none;
}

.menu-links {
    display: flex;
    flex-direction: column;
    text-align: right;
    align-items: flex-end;
    max-height: 90vh;
    overflow-y: auto;
    padding: 0 var(--spacing-lg) var(--spacing-xs) var(--spacing-lg);
    margin-right: var(--spacing-xl);
    -webkit-overflow-scrolling: touch;
    width: auto;
    max-width: 600px;
    overscroll-behavior: contain;
}

/* Menu Links Styling */
.menu-link-main {
    color: var(--text-color);
    text-decoration: none;
    font-size: var(--font-size-xxlarge);
    font-weight: 900;
    margin-top: 6px;
    padding: var(--spacing-sm) var(--spacing-sm) 48px 36px;
    transition: color var(--transition-fast) ease, transform var(--transition-fast) ease;
    position: relative;
    overflow: hidden;
    background-color: transparent;
}

.menu-link-sub {
    color: rgba(255, 255, 255, 0.85);
    text-decoration: none;
    font-size: var(--font-size-medium);
    padding: 6px var(--spacing-sm) 24px 36px;
    transition: color var(--transition-fast) ease, transform var(--transition-fast) ease;
    position: relative;
    overflow: hidden;
    background-color: transparent;
}

/* Menu animation effects */
.menu-link-main::before,
.menu-link-sub::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-color: var(--primary-color);
    transform: translateX(150%);
    transition: transform 0.6s ease;
    z-index: -1;
}

.menu-links a:hover {
    color: var(--text-color);
    transform: translateX(-10px);
}

.menu-links a:hover::before {
    transform: translateX(0);
}

/* Scrollbar styling */
.menu-links::-webkit-scrollbar {
    width: 6px;
}

.menu-links::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 4px;
}

.menu-links::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
}

.menu-links::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
}

/* ====== UNBOX BUTTON HOVER EFFECTS ====== */
/* Unbox button hover effects - individual line translations */
.unbox-btn svg {
    transition: none;
}

/* Default state (boxed) - push lines outwards on hover */
.unbox-btn:hover .boxed-state .top-line {
    animation: moveUp 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .bottom-line {
    animation: moveDown 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .left-line {
    animation: moveLeft 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .right-line {
    animation: moveRight 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .top-flap {
    animation: moveUp 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .bottom-flap {
    animation: moveDown 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .left-flap {
    animation: moveLeft 0.3s ease-out forwards;
}

.unbox-btn:hover .boxed-state .right-flap {
    animation: moveRight 0.3s ease-out forwards;
}

/* Unboxed state - pull lines inwards on hover */
.unbox-btn:hover .unboxed-state .top-chevron {
    animation: moveDown 0.3s ease-out forwards;
}

.unbox-btn:hover .unboxed-state .bottom-chevron {
    animation: moveUp 0.3s ease-out forwards;
}

.unbox-btn:hover .unboxed-state .left-chevron {
    animation: moveRight 0.3s ease-out forwards;
}

.unbox-btn:hover .unboxed-state .right-chevron {
    animation: moveLeft 0.3s ease-out forwards;
}

/* .unbox-btn:hover .unboxed-state .center-box {
    animation: shrinkBox 0.3s ease-out forwards;
} */

/* Keyframes for outward movements */
@keyframes moveUp {
    0% { transform: translateY(0); }
    100% { transform: translateY(-3px); }
}

@keyframes moveDown {
    0% { transform: translateY(0); }
    100% { transform: translateY(3px); }
}

@keyframes moveLeft {
    0% { transform: translateX(0); }
    100% { transform: translateX(-3px); }
}

@keyframes moveRight {
    0% { transform: translateX(0); }
    100% { transform: translateX(3px); }
}

/* Keyframes for inward movements */
@keyframes shrinkBox {
    0% { transform: scale(1); }
    100% { transform: scale(0.9); }
}

/* Reset animations when not hovering */
.unbox-btn:not(:hover) svg path,
.unbox-btn:not(:hover) svg rect {
    animation: resetPosition 0.3s ease-out forwards;
}

@keyframes resetPosition {
    to {
        transform: translateX(0) translateY(0) scale(1);
    }
}


/* ====== CUSTOM CURSOR ====== */
html, body, a, button, input, select, textarea, .cube-face, .scene, .cube,
[role="button"], [tabindex]:not([tabindex="-1"]), .control-btn, .zoom-btn, .help-btn,
.menu-btn, .menu-links a, .inner-cube, .inner-cube-content {
    cursor: none !important; /* Override all cursor styles */
}

/* The custom cursor itself - TOP LEFT POINTER VERSION */
.custom-cursor {
    position: fixed;
    width: 10px;
    height: 10px;
    background-color: #c51f5d;
    box-shadow: 0 0 8px 2px rgba(197, 31, 93, 0.6);
    border: 1px solid #ff6b9e;
    pointer-events: none;
    z-index: 99999;
    /* Start with initial positioning */
    left: 0;
    top: 0;
    transition: width 0.3s ease, height 0.3s ease;
    opacity: 1;
    will-change: left, top; /* Optimize for position changes */
    
    /* Create a more pointed top-left corner */
    border-radius: 0 2px 2px 0; /* Sharp top-left, slightly rounded other corners */
    
    /* Make sure cursor is visible */
    visibility: visible;
    display: block;
}

/* Add a small triangle pointer at the top-left corner */
.custom-cursor::before {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    width: 0;
    height: 0;
    border-left: 4px solid #ff6b9e;
    border-bottom: 4px solid transparent;
    border-top: 4px solid #ff6b9e;
    border-right: 4px solid transparent;
    z-index: 1;
}

.cursor-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
    /* Remove background and border since parent has them */
    background: transparent;
    border: none;
}

.cursor-text {
    color: white;
    font-size: 15px;
    font-weight: bold;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

/* Enlarged cursor when over cube faces */
.custom-cursor.hover {
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0 4px 4px 0; /* Sharp top-left, rounded other corners */
}

/* Keep the triangle pointer even when expanded */
.custom-cursor.hover::before {
    content: '';
    position: absolute;
    top: -1px;
    left: -1px;
    width: 0;
    height: 0;
    border-left: 6px solid #ff6b9e; /* Slightly larger for expanded state */
    border-bottom: 6px solid transparent;
    border-top: 6px solid #ff6b9e;
    border-right: 6px solid transparent;
    z-index: 1;
}

.custom-cursor.hover .cursor-text {
    opacity: 1;
}

/* Target the specific drag cursors */
*:active, *:focus {
    cursor: none !important;
}

/* Make sure the custom cursor is visible during dragging */
.custom-cursor {
    pointer-events: none;
    z-index: 10000 !important; /* Ensure highest z-index */
    visibility: visible !important;
}

/* Add a specific class for when dragging occurs */
.custom-cursor.dragging .cursor-content {
    transform: scale(0.8);
}

.custom-cursor.dragging {
    background-color: #c51f5d;
    box-shadow: 0 0 8px 2px rgba(197, 31, 93, 0.6);
    border: 1px solid #ff6b9e;
}

/* Disable custom cursor on mobile/touch devices */
@media (max-width: 768px), (pointer: coarse) {
    .custom-cursor {
        display: none !important;
    }
    
    /* Reset all cursor styles on mobile */
    html, body, a, button, input, select, textarea, .cube-face, .scene, .cube,
    [role="button"], [tabindex]:not([tabindex="-1"]), .control-btn, .zoom-btn, .help-btn,
    .menu-btn, .menu-links a, .inner-cube, .inner-cube-content, *:active, *:focus, * {
        cursor: auto !important;
    }
    
    /* Use pointer for interactive elements */
    a, button, .cube-face, [role="button"], .control-btn, .zoom-btn, .help-btn, .menu-btn, .menu-links a, .inner-cube {
        cursor: pointer !important;
    }
}


/* ====== MEDIA QUERIES ====== */
@media (min-width: 768px) {
    .face-text {
        font-size: 6vmin;
        bottom: 10%;
        left: 10%;
    }
}

@media (min-width: 1200px) {
    .face-text {
        font-size: 7vmin;
    }
}

@media (max-width: 992px) {
    .menu-link-main {
        font-size: var(--font-size-xlarge);
    }
}

@media (max-width: 768px) {
    .cube {
        scale: 1.2; /* Larger scale for smaller screens */
    }
    
    .controls {
        bottom: 60px;
    }
    
    .menu-links {
        padding-right: var(--spacing-md);
    }
    
    .menu-link-main {
        font-size: var(--font-size-large);
        padding: var(--spacing-sm) 6px 24px 24px;
    }
    
    .menu-link-sub {
        font-size: var(--font-size-normal);
        padding: 6px 6px 24px 12px;
    }
}

/* ====== SIMPLE SPIN-OUT TRANSITION EFFECT ====== */
.cube-spin-out {
    transition: transform 1.5s ease-out !important;
}